---
import type { GetStaticPathsOptions, Page } from 'astro';
import type { CollectionEntry } from 'astro:content';
import type { Terms } from '../../../types.ts';
import { PERMALINK_POSTS, PERMALINK_POSTS_SINGLE, POSTS_PER_PAGE } from '../../../consts';
import { getTerms, getEntriesByTag, getEntriesByCategory } from '../../../utils';
import Layout from '../../../layouts/Layout.astro';
import Header from '../../../components/partials/Header.astro';
import PostCard from '../../../components/cards/Post.astro';
import Pagination from '../../../components/ui/Pagination.astro';

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const terms: Terms[] = await getTerms('posts');
  let paths: any[] = [];

  for (const term of terms) {
    const { name, slug, type } = term;

    let entries;
    switch (type) {
      case 'category':
        entries = await getEntriesByCategory('posts', name);
        break;
      case 'tag':
        entries = await getEntriesByTag('posts', name);
        break;
      default:
        entries = await getEntriesByCategory('posts', name);
    };

    const paginatedTerms = paginate(entries, {
      params: { posts: PERMALINK_POSTS, terms: `${type}/${slug}` },
      pageSize: POSTS_PER_PAGE || 9
    });

    paginatedTerms.forEach((path) => {
      path.props = { ...path.props, term };
    });

    paths = paths.concat(paginatedTerms);
  };

  return paths;
};

const { page, term } = Astro.props as { page: Page<CollectionEntry<'posts'>>, term: Terms };
---

<Layout
  title="All Posts"
  description="An archive of all posts"
>
  <section class="not-prose flex flex-col py-8">

    <Header
      class="border-b-2 border-theme-300 dark:border-theme-700 mb-8"
      title={`All posts tagged with '${term.name}'`}
      titleTag="h1"
      description={`Showing ${page.end + 1} of ${page.total} posts.`}
    />

    <div class="grid gap-8 grid-cols-1 sm:grid-cols-2 lg:grid-cols-3">
      {page.data.map((post) =>
        <PostCard
          title={post.data.title}
          titleTag="h3"
          description={post.data.description}
          date={post.data.pubDate}
          image={post.data.image?.src}
          alt={post.data.image?.alt}
          href={`/${PERMALINK_POSTS_SINGLE}/${post.data.slug}/`}
        />
      )}
    </div>

    <Pagination
      page={page}
    />

  </section>
</Layout>
