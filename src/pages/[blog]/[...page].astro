---
import type { GetStaticPathsOptions, Page } from 'astro';
import { type CollectionEntry, getCollection } from 'astro:content';
import { PERMALINK_BLOG, POSTS_PER_PAGE } from '../../consts.ts';
import { sortMostRecent } from '../../utils/sortingHat.ts';
import Layout from '../../layouts/Layout.astro';
import BlogCard from '../../components/cards/BlogCard.astro';
import Pagination from '../../components/ui/Pagination.astro';
import Heading from '../../components/blocks/Heading.astro';

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
    const posts = (await getCollection('blog')).sort(sortMostRecent);
    return paginate(posts, { params: { blog: PERMALINK_BLOG }, pageSize: POSTS_PER_PAGE || 9 });
};

interface Props { 
  page: Page<CollectionEntry<'blog'>>
};

const { page }: Partial<Props> = Astro.props;
---

<Layout
  title="All Blog Posts"
  description="An archive of all blog posts"
>
  <section class="not-prose flex flex-col py-8">

    <Heading
      class="border-b-2 border-theme-300 dark:border-theme-700 mb-8"
      title="Archive"
      titleTag="h1"
      description={`Showing ${page.start + 1} to ${page.end + 1} posts out of ${page.total} posts.`}
    />

    <div class="grid gap-8 grid-cols-1 sm:grid-cols-2 lg:grid-cols-3">
      {page.data.map((post) =>
        <BlogCard
          title={post.data.title}
          titleTag="h3"
          description={post.data.description}
          date={post.data.date}
          image={post.data.image?.src}
          alt={post.data.image?.alt}
          href={post.id}
        />
      )}
    </div>

    <Pagination
      page={page}
    />

  </section>
</Layout>
