---
import { Picture } from 'astro:assets';
import type { CardProps } from '~/types';
import { SITE_OG_IMAGE } from '~/consts';
import Button from '~/components/ui/Button.astro';
import Date from '~/components/ui/Date.astro';
import Heading from '~/components/ui/Heading.astro';

interface Props extends CardProps {
  date: Date,
  href: string
};

const { title, titleTag = 'h3', description, date, image, alt = '', href, ...rest }: Partial<Props> = Astro.props;

const uniqueId = Math.random().toString(36).slice(2, 11);
---

<li
  class="group/card h-full flex flex-col-reverse hover:shadow-md dark:shadow-black brightness-90 hover:brightness-100 focus:brightness-100 transition duration-300"
  tabindex="-1"
  aria-label={title}
  :class="{'cursor-pointer': !preventClick}"
  x-data="{ clickTimeout: null, preventClick: false }"
  @mouseleave="clearTimeout(clickTimeout); preventClick = false"
  @mousedown="event.preventClick = false; event.button === 2 ? preventClick = true : clickTimeout = setTimeout(() => preventClick = true, 200);"
  @mouseup=" clearTimeout(clickTimeout); if (!preventClick) { window.location = $refs.link.href; } preventClick = false;"
  @keydown.enter="window.location = $refs.link.href"
  {...rest}
>
  <article class="flex flex-col flex-grow gap-2 p-4 mb-auto">
    <Heading id={uniqueId} titleTag={titleTag} class="md:text-xl hover:text-true-black dark:hover:text-true-white underline underline-offset-8 decoration-transparent hover:decoration-true-black dark:hover:decoration-true-white transition duration-300">
      {title}
    </Heading>

    <Date date={date} description="Blog published on" />

    <p class="text-black dark:text-white">{description}</p>

    <Button
      class="mt-auto mx-0 mr-auto pl-0"
      buttonStyle="link"
      text="Read more"
      href={href}
      icon="tabler:arrow-right"
      iconSize={21}
      iconRotate={true}
      aria-describedby={uniqueId}
      x-ref="link"
    />
  </article>
  
  <Picture
    src={image ? image : SITE_OG_IMAGE}
    widths={[480]}
    sizes={`480px`}
    inferSize={true}
    formats={['webp']}
    class="h-full md:min-h-[216px] md:max-h-[216px] lg:max-h-56 min-w-full object-cover aspect-[4/3]"
    alt={alt}
  />
</li>
