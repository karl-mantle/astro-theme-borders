---
import type { SectionProps } from '~/types';
import { THEME_CONTAINER_DESKTOP, THEME_CONTAINER_MOBILE } from '~/consts';
import Button from '~/components/ui/Button.astro';
import Date from '~/components/ui/Date.astro';
import Heading from '~/components/ui/Heading.astro';
import Image from '~/components/ui/Image.astro';

interface Props extends SectionProps {
  title: string,
  date?: Date,
  aspectRatio?: string,
  containImage?: boolean
};

const { title, titleTag = 'h2', description, date, image, alt = '', primaryButtonProps, secondaryButtonProps, aspectRatio, containImage = false, contained = true, class: className, ...rest }: Partial<Props> = Astro.props;

let containerCSS = ``;
let containerContentCSS = `${THEME_CONTAINER_MOBILE} max-w-screen-sm`
if (contained === false) {
  containerCSS = '';
  containerContentCSS = ``
};
---

<section class:list={['grid grid-cols-1 bg-light-grey dark:bg-dark-grey', image ? 'md:grid-cols-2' : '', contained ? `${THEME_CONTAINER_DESKTOP}` : '', className]} {...rest} >

  { image && (
    <Image
      image={image}
      alt={alt}
      class="order-1 md:order-2"
      aspectRatio={aspectRatio}
      containImage={containImage}
    />
  )}

  <div class:list={['order-2 md:order-1 flex flex-col gap-4 justify-center p-8', contained ? `${THEME_CONTAINER_DESKTOP} xl:px-20` : 'xl:pl-0 ml-auto max-w-screen-sm']}>

    <Heading titleTag={titleTag}>{title}</Heading>

    { date &&  (
      <Date date={date} description="Post published on"/>
    )}

    { description && (
      <p class="text-black dark:text-white">{description}</p>
    )}

    { (primaryButtonProps || secondaryButtonProps) && (
      <div class="flex flex-col lg:flex-row gap-4">
        { primaryButtonProps && (
          <Button {...primaryButtonProps} />
        )}
        { secondaryButtonProps && (
          <Button {...secondaryButtonProps} />
        )}
      </div>
    )}

    <slot />

  </div>
</section>
