---
import type { DataEntryMap } from 'astro:content';
import type { DefaultTypes } from '~/types';
import { PERMALINK_POSTS_SINGLE, PERMALINK_CUSTOM_SINGLE, PERMALINK_POSTS, PERMALINK_CUSTOM } from '~/consts';
import { getEntries } from '~/utils';
import Container from '~/components/sections/Container.astro';
import PostCard from '~/components/cards/Post.astro';
import CustomCard from '~/components/cards/Post.astro';
import type { HTMLAttributes } from 'astro/types';

interface Props extends DefaultTypes, HTMLAttributes<'section'> {
  contentCollection: keyof DataEntryMap,
  maxEntries?: number
};

const { backgroundColor = 'transparent', bodyColor = backgroundColor, buttonPrimary, buttonSecondary, contentCollection, description, heading, headingOptions = { headingTag: 'h2' }, layoutOptions, maxEntries = 3, class: className, ...rest }: Partial<Props> = Astro.props;

const entries = await getEntries(contentCollection, maxEntries);

let defaultHeading;
switch (contentCollection) {
  case 'posts':
    defaultHeading = 'Recent posts'
    break;
  case 'custom':
    defaultHeading = 'Recent custom'
    break;
  default:
    break;
};

let defaultHref;
switch (contentCollection) {
  case 'posts':
    defaultHref = `${Astro.site}${PERMALINK_POSTS}`;
    break;
  case 'custom':
    defaultHref = `${Astro.site}${PERMALINK_CUSTOM}`;
    break;
  default:
    break;
};
---

<Container
  backgroundColor={backgroundColor}
  buttonPrimary={
    buttonPrimary || {
      buttonStyle: 'link',
      class: 'mt-auto mr-auto ml-0 pl-0 focus:pl-2',
      href: `${defaultHref}`,
      buttonText: 'View all posts',
      buttonTextClass: '',
      buttonTextWrap: false,
      icon: 'carbon:arrow-right',
      iconSize: 21,
      iconReverse: false,
      iconAnimate: true
  }}
  buttonSecondary={buttonSecondary}
  class={className}
  description={description}
  heading={heading || defaultHeading }
  headingOptions={headingOptions}
  layoutOptions={layoutOptions}
  type="ordered"
  {...rest}
>

  { contentCollection === 'posts' && (
    entries.map((post) =>
      <PostCard
        backgroundColor={bodyColor}
        date={post.data.pubDate}
        description={post.data.description}
        heading={post.data.title}
        headingOptions={{ headingTag: 'h3' }/* fix */} 
        href={`${Astro.site}${PERMALINK_POSTS_SINGLE}${post.data.slug}/`}
        image={post.data.image?.src}
        imageOptions={{ altText: post.data.image?.alt }}
      />
    )
  )}

  { contentCollection === 'custom' && (
    entries.map((custom) =>
      <CustomCard
        backgroundColor={bodyColor}
        date={custom.data.pubDate}
        description={custom.data.description}
        heading={custom.data.title}
        headingOptions={{ headingTag: 'h3' }/* fix */}
        href={`${Astro.site}${PERMALINK_CUSTOM_SINGLE}${custom.data.slug}/`}
        image={custom.data.image?.src}
        imageOptions={{ altText: custom.data.image?.alt }}
      />
    )
  )}

</Container>
