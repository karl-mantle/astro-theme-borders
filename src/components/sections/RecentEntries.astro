---
import type { DataEntryMap } from 'astro:content';
import type { SectionProps } from '~/types';
import { PERMALINK_POSTS_SINGLE, PERMALINK_CUSTOM_SINGLE, PERMALINK_POSTS, PERMALINK_CUSTOM } from '~/consts';
import { getEntries } from '~/utils';
import Container from '~/components/sections/Container.astro';
import PostCard from '~/components/cards/Post.astro';
import CustomCard from '~/components/cards/Post.astro';

interface Props extends SectionProps {
  columns: number,
  contentCollection: keyof DataEntryMap,
  maxEntries?: number,
  hideHeader?: boolean,
  fullWidth?: boolean
};

const { title, titleTag = 'h2', description, primaryButtonProps, secondaryButtonProps, backgroundColor = 'transparent', bodyColor = backgroundColor, columns, contentCollection, maxEntries = 3, hideHeader, fullWidth, class: className, ...rest }: Partial<Props> = Astro.props;

const entries = await getEntries(contentCollection, maxEntries);

let defaultTitle;
switch (contentCollection) {
  case 'posts':
    defaultTitle = 'Recent posts'
    break;
  case 'custom':
    defaultTitle = 'Recent custom'
    break;
  default:
    break;
};

let defaultHref;
switch (contentCollection) {
  case 'posts':
    defaultHref = `${Astro.site}${PERMALINK_POSTS}`;
    break;
  case 'custom':
    defaultHref = `${Astro.site}${PERMALINK_CUSTOM}`;
    break;
  default:
    break;
};
---

<Container
  class={className}
  title={title || defaultTitle }
  titleTag={titleTag}
  description={description}
  primaryButtonProps={primaryButtonProps || { buttonStyle: 'link', href: `${defaultHref}`, text: 'View all posts', textClass: '', icon: 'tabler:arrow-right', iconSize: 21, iconReverse: false, iconRotate: true }}
  secondaryButtonProps={secondaryButtonProps}
  backgroundColor={backgroundColor}
  columns={columns}
  type="ordered"
  hideHeader={hideHeader}
  fullWidth={fullWidth}
  {...rest}
>

  { contentCollection === 'posts' && (
    entries.map((post) =>
      <PostCard
        title={post.data.title}
        titleTag="h3"
        description={post.data.description}
        date={post.data.pubDate}
        image={post.data.image?.src}
        alt={post.data.image?.alt}
        backgroundColor={bodyColor}
        href={`${Astro.site}${PERMALINK_POSTS_SINGLE}${post.data.slug}/`}
      />
    )
  )}

  { contentCollection === 'custom' && (
    entries.map((custom) =>
      <CustomCard
        title={custom.data.title}
        titleTag="h3"
        description={custom.data.description}
        date={custom.data.pubDate}
        image={custom.data.image?.src}
        alt={custom.data.image?.alt}
        backgroundColor={bodyColor}
        href={`${Astro.site}${PERMALINK_CUSTOM_SINGLE}${custom.data.slug}/`}
      />
    )
  )}

</Container>
