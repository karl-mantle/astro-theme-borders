---
import type { HTMLAttributes } from 'astro/types';
import type { DefaultTypes } from '~/types';
import { THEME_CONTAINER_DESKTOP, THEME_CONTAINER_MOBILE } from '~/consts';
import { resolveBackgroundColor } from '~/utils';
import Content from '~/components/partials/Content.astro';
import Image from '~/components/ui/Image.astro';

interface Props extends DefaultTypes, HTMLAttributes<'section'> {};

const { backgroundColor = 'transparent', bodyColor = backgroundColor, buttonPrimary, buttonSecondary, date, dateOptions, description, heading, headingOptions, image, imageOptions, layoutOptions, class: className, ...rest }: Partial<Props> = Astro.props;

let imageLayoutCSS;
switch (layoutOptions?.reverseColumns) {
  case true:
    if (layoutOptions?.padded) {
      imageLayoutCSS = 'order-1 md:w-[50%]';
    } else {
      imageLayoutCSS = 'order-1 md:absolute md:top-0 md:bottom-0 md:left-0 md:right-1/2';
    }
    break;
  default:
    if (layoutOptions?.padded) {
      imageLayoutCSS = 'order-1 md:order-2 md:w-[50%]';
    } else {
      imageLayoutCSS = 'order-1 md:order-2 md:absolute md:top-0 md:bottom-0 md:right-0 md:left-1/2';
    }
    break;
};

let contentLayoutCSS;
switch (layoutOptions?.reverseColumns) {
  case true:
    if (layoutOptions?.padded) {
      contentLayoutCSS = `order-2 md:w-[50%] ${THEME_CONTAINER_MOBILE} md:px-16 py-8 md:py-16`;
    } else {
      contentLayoutCSS = 'order-2 md:w-[50%] p-8 md:p-16 md:pr-8 ml-auto';
    }
    break;
  default:
    if (layoutOptions?.padded) {
      contentLayoutCSS = `order-2 md:order-1 md:w-[50%] ${THEME_CONTAINER_MOBILE} md:px-16 py-8 md:py-16`;
    } else {
      contentLayoutCSS = 'order-2 md:order-1 md:w-[50%] p-8 md:p-16 md:pl-8';
    }
    break;
};
---

<section class:list={['relative flex flex-col', resolveBackgroundColor(backgroundColor), className]} {...rest} >

  <div class:list={['flex flex-col md:flex-row', resolveBackgroundColor(bodyColor), THEME_CONTAINER_DESKTOP, layoutOptions?.padded ? 'relative' : '']}>

    <Image
      class={imageLayoutCSS}
      image={image}
      {...imageOptions}
    />

    <Content
      backgroundColor={bodyColor}
      buttonPrimary={buttonPrimary}
      buttonSecondary={buttonSecondary}
      class={contentLayoutCSS}
      date={date}
      dateOptions={dateOptions}
      description={description}
      heading={heading}
      headingOptions={headingOptions}
    >

      <slot />

    </Content>

  </div>

</section>
